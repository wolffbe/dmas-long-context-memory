version: '3.8'

services:
  locomo:
    build:
      context: ./locomo
      dockerfile: Dockerfile
    container_name: locomo
    ports:
      - "8002:8000"
    volumes:
      - locomo-data:/data
    environment:
      - DATA_URL=https://raw.githubusercontent.com/snap-research/locomo/refs/heads/main/data/locomo10.json
    networks:
      - dmas-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    volumes:
      - qdrant-data:/qdrant/storage
    networks:
      - memory-internal
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/healthz"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    volumes:
      - ollama-data:/root/.ollama
    networks:
      - memory-internal
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          memory: 4G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  memory:
    build:
      context: ./memory
      dockerfile: Dockerfile
    container_name: memory
    ports:
      - "8005:8005"
    depends_on:
      qdrant:
        condition: service_healthy
      ollama:
        condition: service_healthy
    environment:
      - MEMORY_BACKEND=mem0
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - QDRANT_COLLECTION=conversations
      - OLLAMA_BASE_URL=http://ollama:11434
      - OLLAMA_MODEL=llama3.1:latest
      - OLLAMA_EMBED_MODEL=nomic-embed-text:latest
    volumes:
      - memory-data:/data
    networks:
      - memory-internal
      - dmas-network
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  coordinator:
    build:
      context: ./coordinator
      dockerfile: Dockerfile
    container_name: coordinator
    ports:
      - "8003:8001"
    depends_on:
      locomo:
        condition: service_healthy
      memory:
        condition: service_healthy
      responder:
        condition: service_healthy
    environment:
      - API_URL=http://locomo:8000
      - MEMORY_URL=http://memory:8005
      - RESPONDER_URL=http://responder:8006
      - MODEL=llama3.2:3b
      - NUM_CTX=512
    networks:
      - dmas-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  responder:
    build:
      context: ./responder
      dockerfile: Dockerfile
    container_name: responder
    ports:
      - "8006:8006"
    environment:
      - MODEL=llama3.2:8b
      - NUM_CTX=4096
    networks:
      - dmas-network
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8006/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

volumes:
  locomo-data:
  memory-data:
  qdrant-data:
  ollama-data:

networks:
  memory-internal:
    driver: bridge
    internal: false
  
  dmas-network:
    driver: bridge